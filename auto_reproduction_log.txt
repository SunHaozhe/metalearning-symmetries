python train_synthetic.py --problem rank1 --model share_fc
python train_synthetic.py --problem rank2 --model share_fc
python train_synthetic.py --problem rank5 --model share_fc

OK

*************************************************

python train_synthetic.py --problem 2d_rot8 --model share_fc

Traceback (most recent call last):                                                                                                                                                                    
  File "train_synthetic.py", line 182, in <module>                                                                                                                                                    
    main()                                                                                                                                                                                            
  File "train_synthetic.py", line 154, in main                                                                                                                                                        
    train(step_idx, data, net, inner_opt_builder, meta_opt, cfg.num_inner_steps)                                                                                                                      
  File "train_synthetic.py", line 43, in train                                                                                                                                                        
    spt_pred = fnet(x_spt[i])                                                                                                                                                                         
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__                                                                                                     
    result = self.forward(*input, **kwargs)                                                                                                                                                           
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 460, in _patched_forward                                                                                                        
    output = self.boxed_forward(*args, **kwargs)                                                                                                                                                      
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward                                                                                                         
    return true_forward(self, *args, **kwargs)                                                                                                                                                        
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/container.py", line 100, in forward                                                                                                   
    input = module(input)                                                                                                                                                                             
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/home/sunhaozhe275940200/metalearning-symmetries/layers.py", line 122, in forward
    return F.linear(x, weight, self.bias)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/functional.py", line 1372, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [32 x 32], m2: [70 x 68] at /pytorch/aten/src/TH/generic/THTensorMath.cpp:136



***********************************************************


python train_synthetic.py --problem 2d_rot8_flip --model share_fc


Traceback (most recent call last):
  File "train_synthetic.py", line 182, in <module>
    main()
  File "train_synthetic.py", line 154, in main
    train(step_idx, data, net, inner_opt_builder, meta_opt, cfg.num_inner_steps)
  File "train_synthetic.py", line 43, in train
    spt_pred = fnet(x_spt[i])
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 460, in _patched_forward
    output = self.boxed_forward(*args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/home/sunhaozhe275940200/metalearning-symmetries/layers.py", line 122, in forward
    return F.linear(x, weight, self.bias)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/functional.py", line 1372, in linear
    output = input.matmul(weight.t())
RuntimeError: size mismatch, m1: [32 x 32], m2: [70 x 68] at /pytorch/aten/src/TH/generic/THTensorMath.cpp:136



************************************************************************


python train_synthetic.py --problem 2d_rot8 --model share_conv
python train_synthetic.py --problem 2d_rot8_flip --model share_conv


OK


************************************************************************


python train_synthetic.py --problem rank1 --model share_conv


Traceback (most recent call last):
  File "train_synthetic.py", line 182, in <module>
    main()
  File "train_synthetic.py", line 154, in main
    train(step_idx, data, net, inner_opt_builder, meta_opt, cfg.num_inner_steps)
  File "train_synthetic.py", line 43, in train
    spt_pred = fnet(x_spt[i])
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 460, in _patched_forward
    output = self.boxed_forward(*args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/home/sunhaozhe275940200/metalearning-symmetries/layers.py", line 180, in forward
    return self.conv2d_forward(x, weight)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 342, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 3 1 3 3, but got 3-dimensional input of size [1, 1, 70] instead



************************************************************


python train_synthetic.py --problem rank2 --model share_conv


Traceback (most recent call last):
  File "train_synthetic.py", line 182, in <module>
    main()
  File "train_synthetic.py", line 154, in main
    train(step_idx, data, net, inner_opt_builder, meta_opt, cfg.num_inner_steps)
  File "train_synthetic.py", line 43, in train
    spt_pred = fnet(x_spt[i])
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 460, in _patched_forward
    output = self.boxed_forward(*args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/home/sunhaozhe275940200/metalearning-symmetries/layers.py", line 180, in forward
    return self.conv2d_forward(x, weight)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 342, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 6 1 3 3, but got 3-dimensional input of size [1, 1, 70] instead




*****************************************************************


python train_synthetic.py --problem rank5 --model share_conv


Traceback (most recent call last):
  File "train_synthetic.py", line 182, in <module>
    main()
  File "train_synthetic.py", line 154, in main
    train(step_idx, data, net, inner_opt_builder, meta_opt, cfg.num_inner_steps)
  File "train_synthetic.py", line 43, in train
    spt_pred = fnet(x_spt[i])
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 460, in _patched_forward
    output = self.boxed_forward(*args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/higher/patch.py", line 387, in patched_forward
    return true_forward(self, *args, **kwargs)
  File "/home/sunhaozhe275940200/metalearning-symmetries/layers.py", line 180, in forward
    return self.conv2d_forward(x, weight)
  File "/opt/conda/lib/python3.7/site-packages/torch/nn/modules/conv.py", line 342, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Expected 4-dimensional input for 4-dimensional weight 30 1 3 3, but got 3-dimensional input of size [1, 1, 70] instead












